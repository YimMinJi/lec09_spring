<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    https://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security 
    http://www.springframework.org/schema/security/spring-security.xsd">
	
	<!--
		* http : 필터를 적용할 실질적 경로 설정해줄거야 크게 3가지
		1. auto-config : true/false 쓰겠다 = true , 자동설정 여부 묻기야  
		2. use-expressions :  스프링 EL(표현법)을 사용할 것인가 여부 , 쓸거면 true
		3. intercept-url : 스프링 시큐리티가 감시하는 url과 권한 패턴을지정, 어떤레벨부터 접근(access속성)가능한지 설정가능(1.admin,2.user 등)
	  -->
<!-- 	<http auto-config="true" use-expressions ="false" >
		<intercept-url pattern="/board/**" access="ROLE_USER"/>
	</http> -->
	
	<!--0805 스프링 시큐리티중  -->
	<!--우리가 스프링 시큐리티를 적용할건데, 적용제외 대상 url을 설정해줄거야  -->
	<!--최초 진입페이지엔 필터를 걸을 필요가 없다  -->
	<!-- <http pattern = "/" security="none"></http>
	<http pattern = "/resources/**" security="none"></http> -->
	
	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/" access="permitAll()"/>
		<intercept-url pattern="/resources/**" access="permitAll()"/>
		<intercept-url pattern="/board/**" access = "isAuthenticated()" />
		<intercept-url pattern="/join" access="permitAll()"/>
	<!--
		 * 로그인페이지 관련 속성 설정 ==> <http>태그 안에 들어가야한다. 
		login-page : 로그인 화면 전환 url을 적어주면된다.
		login-processing-url : 로그인 기능 url(default가 "슬래시로그인" /login)
		username-parameter : 로그인시에 전송되는 아이디 name값 == 폼태그에 적어놓은 name값
		password-parameter : 로그인시에 전송되는 비밀번호 name값 == 폼태그에 적어놓은 name값 
		default-target-url : 로그인 성공시 이동할 url 
		authentication-failure-url : 로그인 실패시 이동할 url 설정
	  -->
	  <form-login 
	  	login-page="/loginPage"
	  	username-parameter="user_id"
	  	password-parameter="user_pw"
	  	default-target-url="/"
	  	authentication-failure-url="/loginPage"
	  	/>
	  	<!--로그아웃 관련 설정,따로 페이지없으니까 착각 ㄴ
	  		logout-url : 로그아웃 페이지 url 설정
	  		logout-success-url : 로그아웃 성공시 이동할 url 설정
	  		invalidate-session : 로그아웃 성공시 세션의 연결을 끊을지 말지 설정하게 해주는애
	  		delete-cookie : 로그아웃 성공시 삭제할 쿠키의 이름 설정
	  		
	  	 -->
	  	 <logout
	  	 logout-url="/logout"
	  	 logout-success-url ="/"
	  	 delete-cookies = "JESSIONID"
	  	 />
	</http>
	
	  	
	  
	<!-- 
		* authentication-manager : authenticationManager 설정
		authentication-provider : authenticationProvider 설정
		user-service : 간단하게 UserDetails 정보를 설정 할 수 있다.
		password 앞에 {noop} 사용 -> 암호화 없이 시큐리티 동작 확인 가능
	 -->
	<authentication-manager>
		<authentication-provider>
			<user-service>
				<user name="admin" password="{noop}admin" authorities="ROLE_ADMIN"/>
				<user name="user" password="{noop}user" authorities="ROLE_USER"/>
			</user-service>
		</authentication-provider>
	</authentication-manager>
	
	<beans:bean id="customHttpFirewall" 
	class="org.springframework.security.web.firewall.StrictHttpFirewall">
		<beans:property name="allowSemicolon" value ="true"/>
	</beans:bean>
	<http-firewall ref ="customHttpFirewall"/>
</beans:beans>