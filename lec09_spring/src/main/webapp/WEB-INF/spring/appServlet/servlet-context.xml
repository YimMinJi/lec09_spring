<?xml version="1.0" encoding="UTF-8"?>
<!--모듈(mvc모듈이 주로 활용하는 beans)들이 읽는 컨텍스트 파일이다.  -->
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
	https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans 
		https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		https://www.springframework.org/schema/context/spring-context.xsd">
	<!-- mvc모듈이 컨트롤하는 놈이야.(서블릿컨텍스트에서는 얘가 대장이야) -->
	<!-- 첫번째 @Controller가 명시된 클래스를 요청 받을 수 있는 객체로 설정해준다. ==> 걔를 서블릿으로 쓰겠다라는 뜻 -->
	<!-- 어노테이션 드리븐을 쓰지않으면 요청 받는 클래스를 직접 bean 태그로 추가해야한다.  -->
	<annotation-driven/>
	
	<!--두번째 리솔시스 태그를 추가해준다  
	 웹 애플리케이션을 개발-> 이미지, css, js도 경로를 가지고있다.
	 경로(url)를 가지고 있다 == HandlerMapping의 탐색 대상이 된다.
	 문제는 정적인 파일은 Controller가 아니다 -> (요청을 받을수 없어) -> 404에러가 나온다.
	 resources라는 정적인 파일이 모여있는 폴더 경로를 생성해주고,
	 HandlerMapping의 불필요한 접근을 차단시켜준다.
	-->
	<resources location ="/resources/" mapping="/resources/**"/>
	<!--리솔시스 폴더 만든 후  -->
	<!-- 
		화면경로 알려주기 
		ViewResolver가 반환받은 View파일(jsp),(얘가 모델앤뷰야)를 찾기 위해서 기본 위치 알려주기
	-->
	<!--경로 풀로 써줘야해 -->
	<beans:bean class ="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name = "prefix" value ="/WEB-INF/views/"/>
		<beans:property name = "suffix" value =".jsp"/>
	</beans:bean>
	<!-- 
		Bean(빈) 등록 대상 == (의존성 주입 대상) 설정해주기
		base-package를 설정해서 하위 경로의 자바파일 중에서 어노테이션을 표시한파일을
		Bean으로 등록하여 재사용 가능하도록 해준다.
	 -->
	 <context:component-scan base-package="com.gn.spring"/>
	<!-- 0802 추가 -->
	<!-- 외부 파일 경로 지정  -->
	<!-- 지정해놓은 폴더의 경로를 써주면된다. location=값 -->
	<resources location="file:///C:/board/upload/"
	mapping ="/boardUploadImg/**"/>
	
	
</beans:beans>